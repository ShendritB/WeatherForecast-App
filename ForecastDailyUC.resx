<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVkAAABWCAYAAABl0+W6AAAABGdBTUEAALGPC/xhBQAAA9lJREFUeF7t
        2z2OFHcQxuHVInEA25KBy1hIQGIOZXwAG8nW4o8YrsAx1oHxNcCCfF3VU11q9c54CCpB+7zSE+y/uyf8
        Cc00Fzc3N6dchifhKlyH98HM7C4vO5g9zC5mH7OTx/p50Tt2MTwP74KZmZ1edjJ7eaujvd2F++G3YGZm
        n7/sZvaze9rbHOYNb8N2H8PP4XH4JmzvB7hrsoPZw+xi9nG77GeHtrcehD/Cdm/Cw7C9B4CD7GN2crvs
        6HK9Vwffh+1+DOs1AE57EbbLnlZhY/FH/jr2d16pZZn3HwLAaa/Duvwx7LISu0Q2X0NY9yk8CPsPAOC0
        7Gb2c93TSuwS2Xzfa93LsH8YgPN+DeuuKrFLZPPF2nX5q9n+QQDOexbWXVdil8hu/yfXo7B/EIDzsp/r
        PlRil8hudy/sHwTgvOxnrxJ7K7L7hwD4fL1KrMgCDOpVYkUWYFCvEiuyAIN6lViRBRjUq8SKLMCgXiVW
        ZAEG9SqxIgswqFeJFVmAQb1KrMgCDOpVYkUWYFCvEiuyAIN6lViRBRjUq8SKLMCgXiVWZAEG9SqxIgsw
        qFeJFVmAQb1KrMgCDOpVYkUWYFCvEiuyAIN6lViRBRjUq8SKLMCgXiVWZAEG9SqxIgswqFeJFVmAQb1K
        rMgCDOpVYkUWYFCvEiuyAIN6lViRBRjUq8SKLMCgXiVWZAEG9SqxIgswqFeJFVmAQb1KrMgCDOpVYkUW
        YFCvEiuyAIN6lViRBRjUq8SKLMCgXiVWZAEG9SqxIgswqFeJFVmAQb1KrMgCDOpVYkUWYFCvEiuyAIN6
        lViRBRjUq8SKLMCgXiVWZAEG9SqxIgswqFeJFVmAQb1KrMgCDOpVYkUWYFCvEiuyAIN6lViRBRjUq8SK
        LMCgXiVWZAEG9SqxIgswqFeJFVmAQb1KrMgCDOpVYkUWYFCvEiuyAIN6ldhbkb0X9g8BcF72s1eJXSL7
        /nC07FHYPwjAeQ/Dug+V2CWy14ezZY/D/kEAznsa1l1XYpfIXh3Olr0M+wcBOO+XsO5VJXaJ7JPD2bJP
        4UHYPwzAad+Gj2Hds0rsEtnL8G45Pux12H8AAKdlN9f9Ey4rsUtk0/O8stmLsP0AAI77IWyXPa3CxvKP
        8mfY7k3IX8u29wBwkH3MTm6XHV2u99aDcD+8Ddvldww/he/C12F7P8Bd81XIHmYXt9/B5rKf2dHl3t56
        UPKG/b9ozczs//d76MCm3vZwI79TyC9vzczs9LKTy3ewe71jF0u+dZAv174Kf4V/g5nZXV52MHuYXczX
        X7OTx/pZhTUzMzMz+zJ3cfEfVIwH07ylvSQAAAAASUVORK5CYII=
</value>
  </data>
</root>